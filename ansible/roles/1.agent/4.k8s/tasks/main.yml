- name: Install kubectl
  script: kubectl.sh

- name: Install Kind
  script: kind.sh

######################################################

- name: Install Docker
  apt:
    name: docker.io
    state: present
  become: yes

- name: Ensure Docker is started and enabled
  service:
    name: docker
    state: started
    enabled: yes
  become: yes

######################################################

- name: Install kind
  get_url:
    url: "https://kind.sigs.k8s.io/dl/v0.25.0/kind-linux-amd64"
    dest: /usr/local/bin/kind
    mode: '0755'
  become: yes

- name: Create Kind cluster with Ingress Controller
  shell: |
    cat <<EOF | kind create cluster --config=-
    kind: Cluster
    apiVersion: kind.x-k8s.io/v1alpha4
    nodes:
    - role: control-plane
      kubeadmConfigPatches:
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "ingress-ready=true"
      extraPortMappings:
      - containerPort: 80
        hostPort: 80
        protocol: TCP
      - containerPort: 443
        hostPort: 443
        protocol: TCP
    EOF
    kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
  args:
    executable: /bin/bash
  become: yes

######################################################

- name: Create a working directory for Kubernetes manifests
  file:
    path: /opt/k8s-manifests
    state: directory
    mode: '0755'

- name: Copy Kubernetes manifests to the remote server
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - { src: "deployment.yml", dest: "/opt/k8s-manifests/deployment.yml" }
    - { src: "service.yml", dest: "/opt/k8s-manifests/service.yml" }
    - { src: "ingress.yml", dest: "/opt/k8s-manifests/ingress.yml" }
    - { src: "ServiceMonitor.yml", dest: "/opt/k8s-manifests/ServiceMonitor.yml" }
    - { src: "node-exporter.yml", dest: "/opt/k8s-manifests/node-exporter.yml" }

# Ensure Ingress Controller is ready
- name: Ensure Ingress Controller is ready
  shell: |
    kubectl rollout status deployment/ingress-nginx-controller -n ingress-nginx
  register: ingress_controller_status
  until: ingress_controller_status.stdout.find("successfully rolled out") != -1
  retries: 5
  delay: 10

- name: Apply Kubernetes manifests
  command: "sudo kubectl apply -f {{ item }} {{ '--validate=false' if 'ingress.yml' in item else '' }}"
  loop:
    - /opt/k8s-manifests/deployment.yml
    - /opt/k8s-manifests/service.yml
    - /opt/k8s-manifests/ingress.yml
    - /opt/k8s-manifests/ServiceMonitor.yml
    - /opt/k8s-manifests/node-exporter.yml
  register: kubectl_output
  retries: 3
  delay: 10
  failed_when: kubectl_output.rc != 0

# Validate if ServiceMonitor and Node Exporter are successfully deployed
- name: Validate ServiceMonitor and Node Exporter deployment
  shell: |
    kubectl get servicemonitor
    kubectl get pods -n monitoring
  register: validation_status
  retries: 5
  delay: 10
  failed_when: validation_status.stdout.find("Error") != -1
