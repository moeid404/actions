name: CD Pipeline

on:
  workflow_run:
    workflows:
      - CI Pipeline  # Name of your CI workflow
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Apply and Capture Output
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve

      - name: Fetch EC2 Instance IPs
        run: |
          aws ec2 describe-instances \
            --filters "Name=tag:Environment,Values=production" "Name=instance-state-name,Values=running" \
            --query "Reservations[*].Instances[*].[Tags[?Key=='Role'].Value | [0], PublicIpAddress]" \
            --output text > ansible/instance_ips.txt
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Update Ansible Hosts File
        run: |
          echo "[all:vars]" > ansible/hosts.ini
          echo "ansible_user=ubuntu" >> ansible/hosts.ini
          echo "" >> ansible/hosts.ini
          
          echo "[agent]" >> ansible/hosts.ini
          grep 'agent' ansible/instance_ips.txt | awk '{print $2}' >> ansible/hosts.ini
          
          echo "" >> ansible/hosts.ini
          echo "[prometheus]" >> ansible/hosts.ini
          grep 'prometheus' ansible/instance_ips.txt | awk '{print $2}' >> ansible/hosts.ini

      - name: Add SSH Key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ansible/ssh_key.pem
          chmod 600 ansible/ssh_key.pem
        shell: bash

      - name: Debug Hosts File
        run: cat ansible/hosts.ini

      - name: Wait for Instances to Initialize
        run: sleep 30  # Adjust the sleep duration based on instance initialization time

      - name: Run Ansible Playbook - Agent
        run: |
          ansible-playbook -i ansible/hosts.ini ansible/agent_play.yml --private-key ansible/ssh_key.pem
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"

      # - name: Run Ansible Playbook - Prometheus
      #   run: |
      #     ansible-playbook -i ansible/hosts.ini ansible/prometheus_play.yml --private-key ansible/ssh_key.pem
      #   env:
      #     ANSIBLE_HOST_KEY_CHECKING: "False"

      - name: Rollback Deployment
        if: failure()
        run: |
          cd terraform
          terraform destroy -auto-approve
    
