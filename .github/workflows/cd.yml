name: CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Terraform - Apply infrastructure
      - name: Terraform Apply
        run: |
          cd terraform

          # Initialize and Apply Terraform
          terraform init
          terraform apply -auto-approve

          # Capture the public and private IPs from Terraform output
          AGENT_PUBLIC_IP=$(terraform output -raw agent_public_ip)
          AGENT_PRIVATE_IP=$(terraform output -raw agent_private_ip)
          PROMETHEUS_PUBLIC_IP=$(terraform output -raw prometheus_public_ip)

          # Debug outputs
          echo "Agent Public IP: $AGENT_PUBLIC_IP"
          echo "Agent Private IP (WP DB Host): $AGENT_PRIVATE_IP"
          echo "Prometheus Server IP: $PROMETHEUS_PUBLIC_IP"

          # Export values for later steps
          echo "AGENT_PUBLIC_IP=$AGENT_PUBLIC_IP" >> $GITHUB_ENV
          echo "AGENT_PRIVATE_IP=$AGENT_PRIVATE_IP" >> $GITHUB_ENV
          echo "PROMETHEUS_PUBLIC_IP=$PROMETHEUS_PUBLIC_IP" >> $GITHUB_ENV

      # Step 4: Update Ansible Hosts
      - name: Update Ansible Hosts and Vars
        run: |
          # Define paths
          HOSTS_FILE=ansible/hosts.ini
          VARS_FILE=ansible/vars.yml

          # Dynamically add agent and prometheus_server to hosts.ini
          if ! grep -q '\[agent\]' $HOSTS_FILE; then
            echo -e "\n[agent]" >> $HOSTS_FILE
            echo "${{ env.AGENT_PUBLIC_IP }}" >> $HOSTS_FILE
          fi

          if ! grep -q '\[prometheus_server\]' $HOSTS_FILE; then
            echo -e "\n[prometheus_server]" >> $HOSTS_FILE
            echo "${{ env.PROMETHEUS_PUBLIC_IP }}" >> $HOSTS_FILE
          fi

          # Update vars.yml dynamically
          sed -i "1s/.*/agent: ${{ env.AGENT_PUBLIC_IP }}/" $VARS_FILE
          sed -i "2s/.*/prometheus_server: ${{ env.PROMETHEUS_PUBLIC_IP }}/" $VARS_FILE

      # Step 5: Add SSH Key
      - name: Add SSH Key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ansible/ssh_key.pem
          chmod 600 ansible/ssh_key.pem

      # Step 6: Run Ansible Playbooks
      - name: Run Ansible Playbook - Agent
        run: |
          ansible-playbook -i ansible/hosts.ini ansible/agent_play.yml --private-key ansible/ssh_key.pem
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"

      - name: Run Ansible Playbook - Prometheus
        run: |
          ansible-playbook -i ansible/hosts.ini ansible/prometheus_play.yml --private-key ansible/ssh_key.pem
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"

      # Step 7: Destroy Terraform Resources (Optional)
      - name: Destroy Terraform Resources
        if: always()
        run: |
          cd terraform
          terraform destroy -auto-approve
