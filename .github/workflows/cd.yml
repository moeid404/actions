name: CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Terraform - Apply infrastructure
      - name: Infrastructure Setup
        run: |
          cd terraform

          # Initialize Terraform
          terraform init

          # Apply Terraform
          terraform apply -auto-approve

          # Capture the public and private IPs from Terraform output
          AGENT_PUBLIC_IP=$(terraform output -raw agent_public_ip)
          AGENT_PRIVATE_IP=$(terraform output -raw agent_private_ip)
          PROMETHEUS_PUBLIC_IP=$(terraform output -raw prometheus_public_ip)

          # Debug outputs
          echo "Agent Public IP: $AGENT_PUBLIC_IP"
          echo "Agent Private IP (WP DB Host): $AGENT_PRIVATE_IP"
          echo "Prometheus Server IP: $PROMETHEUS_PUBLIC_IP"

          # Export values for later steps
          echo "AGENT_PUBLIC_IP=$AGENT_PUBLIC_IP" >> $GITHUB_ENV
          echo "AGENT_PRIVATE_IP=$AGENT_PRIVATE_IP" >> $GITHUB_ENV
          echo "PROMETHEUS_PUBLIC_IP=$PROMETHEUS_PUBLIC_IP" >> $GITHUB_ENV

      # Step 4: Update Ansible Hosts and Vars
      - name: Update Ansible Hosts and Vars
        run: |
          cd ansible

          # Dynamically add agent and prometheus_server to hosts.ini
          if ! grep -q '\[agent\]' hosts.ini; then
            echo -e "\n[agent]" >> hosts.ini
            echo "${{ env.AGENT_PUBLIC_IP }}" >> hosts.ini
          fi

          if ! grep -q '\[prometheus_server\]' hosts.ini; then
            echo -e "\n[prometheus_server]" >> hosts.ini
            echo "${{ env.PROMETHEUS_PUBLIC_IP }}" >> hosts.ini
          fi

          # Update the first 3 lines in vars.yml dynamically
          sed -i "1s/.*/agent: ${{ env.AGENT_PUBLIC_IP }}/" vars.yml
          sed -i "2s/.*/prometheus_server: ${{ env.PROMETHEUS_PUBLIC_IP }}/" vars.yml

      # Step 5: Run Ansible Playbook
      - name: Run Ansible Playbook - Agent
        run: |
          cd ansible
          ansible-playbook -i hosts.ini agent_play.yml --private-key ssh_key.pem
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"

      # - name: Run Ansible Playbook - Prometheus
      #   run: |
      #     cd ansible
      #     ansible-playbook -i hosts.ini prometheus_play.yml --private-key ssh_key.pem
      #   env:
      #     ANSIBLE_HOST_KEY_CHECKING: "False"

      # Step 6: Destroy Terraform resources (Optional, if required)
      - name: Destroy Terraform Resources
        if: always()
        run: |
          cd ansible/roles/4.terraform
          terraform destroy -auto-approve
