name: CD Pipeline

on:
  workflow_run:
    workflows:
      - CI Pipeline
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Apply
        run: |
          terraform init
          terraform apply -auto-approve
          terraform output -json > terraform-output.json
        working-directory: terraform

      - name: Save Terraform State
        uses: actions/upload-artifact@v3
        with:
          name: terraform-state
          path: terraform/terraform.tfstate

  cleanup:
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ failure() }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Download Terraform State
        uses: actions/download-artifact@v3
        with:
          name: terraform-state
          path: terraform

      - name: Terraform Destroy
        run: |
          terraform init
          terraform destroy -auto-approve
        working-directory: terraform
