name: CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Apply
        id: terraform_apply
        run: |
          terraform init
          terraform apply -auto-approve
          terraform output -json > terraform-output.json
        working-directory: terraform

      - name: Debug Terraform Output File
        run: |
          cat terraform/terraform-output.json
      
      - name: Parse Terraform Outputs Without JSON File
        run: |
          # Define the path to the hosts.ini file
          HOSTS_FILE=/home/runner/work/actions/actions/ansible/hosts.ini

          # Extract values directly using Terraform output commands
          AGENT_IP=$(terraform output -raw agent_public_ip)
          PROMETHEUS_IP=$(terraform output -raw prometheus_public_ip)
      
          # Debug outputs
          echo "Agent IP: $AGENT_IP"
          echo "Prometheus IP: $PROMETHEUS_IP"
      
          # Check for parsing errors
          if [ -z "$AGENT_IP" ] || [ -z "$PROMETHEUS_IP" ]; then
            echo "Error: Unable to parse IP addresses from Terraform output"
            exit 1
          fi
      
          # Update ansible/hosts.ini dynamically
          echo "[agent]" > $HOSTS_FILE
          echo "$AGENT_IP" >> $HOSTS_FILE
          echo "" >> $HOSTS_FILE
          echo "[prometheus_server]" >> $HOSTS_FILE
          echo "$PROMETHEUS_IP" >> $HOSTS_FILE
          echo "" >> $HOSTS_FILE
          echo "[all:vars]" >> $HOSTS_FILE
          echo "ansible_user=ubuntu" >> $HOSTS_FILE
        working-directory: terraform

      - name: Add SSH Key
        run: |
          # Write the SSH private key from the GitHub Secret to the `ssh_key.pem` file
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ansible/ssh_key.pem
          chmod 600 ansible/ssh_key.pem
        shell: bash

      - name: Debug Hosts File
        run: |
          HOSTS_FILE=/home/runner/work/actions/actions/ansible/hosts.ini
          cat $HOSTS_FILE
      
      - name: Run Ansible Playbook - Agent
        run: |
          HOSTS_FILE=/home/runner/work/actions/actions/ansible/hosts.ini
          ansible-playbook -i $HOSTS_FILE ansible/agent_play.yml --private-key ansible/ssh_key.pem
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"

      - name: Destroy Terraform Resources
        if: always() # Ensure this runs regardless of the job's success or failure
        run: |
          terraform destroy -auto-approve
        working-directory: terraform


      # - name: Run Ansible Playbook - Prometheus
      #   run: |
      #     ansible-playbook -i ansible/hosts.ini ansible/prometheus_play.yml --private-key ansible/ssh_key.pem
      #   env:
      #     ANSIBLE_HOST_KEY_CHECKING: "False"
